#данная программа открывает тестовый файл и считает количество слов в нём

f = File.open 'file.txt', 'r' #открываем файл file.txt с правами доступа только на чтение
@hh = {} #определяем пустой хеш @hh. хеш объявляется глобальным, так как доступ к нему нужно будет получить из метода

#метод, указанный ниже, будет добавлять каждое слово из файла в хеш-таблицу. В методе используется внутренняя переменная word
def add_to_hash word 
  if !word.empty? #в случае, если значение переменной word не пустое, то все буквы этого значения преобразуются в нижний регистр
    word.downcase!
    cnt = @hh[word].to_i #определяем переменную cnt и присваиваем ей значение из хеша по ключу word. преобразуем это значение в числовой формат. по сути, считаем, сколько раз слово встретилось в файле
    cnt += 1 #увеличиваем значение переменной cnt на единицу
    @hh[word] = cnt #
  end #
end #

f.each_line do |line| #метод, выполняющий операцию с каждой строкой файла и имеющий внутренную переменную line
 arr = line.split(/\s|\n|\.|\,|\'|\:|\;|\!|\?/) #определям переменную arr (массив) и присваиваем ей значения, разделённые согласно условиям в скобках
 arr.each do |word| #для каждого из значений массива arr выполняем метод add_to_hash
 add_to_hash(word) #
 end #
end #

f.close #закрытие файла


f = File.new 'counted.txt', 'w' #открытие файла с правами доступа на запись
@hh.each do |k, v| #выполнение цикла для каждого элемента хеш-таблицы @hh
f.puts "#{v} #{k}" #сохранение каждого элем ента хеш-таблицы @hh в файл
end #

f.close #закрытие файла
puts @hh #вывод на экрана хеш-таблицы