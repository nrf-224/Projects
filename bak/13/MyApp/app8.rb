add_10 = lambda {|x| return x+10}           #определяем лямбда-функцию, прибавляющую 10
add_20 = lambda {|x| return x+20}           #определяем лямбда-функцию, прибавляющую 20
sub_5 = lambda {|x| return x-5}             #определяем лямбда-функцию, отнимающую 5

#если до 300, то отнимать 10
#если до 600, то отнимать 20
#если от 600 и выше, то отнимать 5
                                            
balance = 1000                              #определяем переменную balance, в которой хранится начальный капитал

					    #создаём хэш-таблицу, в которой ключ - комбинация трёх цифр, значение - одна из лямбда-функций							
hh = { 111 => add_10, 222 => add_10, 333 => add_20, 444 => add_20, 555 => add_20, 666 => sub_5, 777 => sub_5, 888 => sub_5, 999 => sub_5 }

loop do
x = rand(100..999)                          #присваиваем переменной x случайное значение от 100 до 999
puts "Combination #{x}"                     #выводим на экран полученное случайное значение

if hh[x]                                    #определяется условие, при котором значение x совпадает с одним из ключей хеш-таблицы hh
	f = hh[x]                           #определяется переменная f, в которой хранится полученное значение x, совпавшее с одним из ключей хеш-таблицы hh
	balance = f.call balance            #в зависимости от значения переменной f, вызывается соответствующая лямбда-функция из хеш-таблицы hh. вызов происходит с аргументом - значением переменной balance
	                                    #результат выполнения лямбда-функции с аргументом - значением переменной balance записывается в переменную balance
	puts "Lambda called"                
	
	else
        balance = sub_5.call balance
end
	puts "balance #{balance}"           #выводится баланс
	puts "press Enter to continue"      #выводится предложение продолжить
	gets                                #нажатие на Enter

end